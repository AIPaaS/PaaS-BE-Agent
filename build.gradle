apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


compileJava.dependsOn clean

sourceCompatibility = 1.7
/*webAppDirName='WebContent'*/

ext{
	projectName="paas-agent"
	moduleVersion="1.0"
	builtBy="gradle"
}
    

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.4.1'
    compile group: 'org.mortbay.jetty', name: 'jetty', version: '6.1.26'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    
	compile group: 'com.alibaba', name: 'fastjson', version: '1.2.7'
	compile group: 'io.netty', name: 'netty-all', version: '4.0.32.Final'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.4.1'
	
	
	compile group: 'com.jcraft', name: 'jsch', version: '0.1.53'
	
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.1.6.RELEASE'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	compile group: 'org.apache.http', name: 'httpclient', version: '4.1.3'
	compile group: 'org.apache.http', name: 'httpcore', version: '4.1.4'
	
	compile group: 'org.apache', name: 'commons-beanutils', version: '1.7.0'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

repositories {
    maven { url "http://10.1.228.199:18081/nexus/content/groups/public/"  }
    maven { url "http://10.1.228.199:18081/nexus/content/repositories/releases" }
    maven { url "http://10.1.228.199:18081/nexus/content/repositories/snapshots/" }
}

task cleanTempDir(type: Delete) {
    delete fileTree(dir: "$buildDir", include: "$project.ext.projectName*")
}

task copyConfig(type: Copy) {
	from( 'build/resources/main')  
    into( 'build/agent-client-new/conf')  
    include('jetty.properties') 
}

task copyBin(type: Copy) {
	project.each { project ->
		from project.fileTree(
				dir: 'shell/agent-client',
		)
		destinationDir file("$buildDir/agent-client-new/bin")
	}
}

task copy3rdJars(type: Copy) {
	project.each { project ->
		from project.configurations.runtime
		
		destinationDir file("$buildDir/agent-client-new/lib")
	}
}


task jetty_copyConfig(type: Copy) {
	from( 'build/resources/main')  
    into( 'build/jetty-server-new/conf')  
    include('jetty.properties')
}

task jetty_copyBin(type: Copy) {
	project.each { project ->
		from project.fileTree(
				dir: 'shell/jetty-server',
		)
		destinationDir file("$buildDir/jetty-server-new/bin")
	}
}

task jetty_copy3rdJars(type: Copy) {
	project.each { project ->
		from project.configurations.runtime
		
		destinationDir file("$buildDir/jetty-server-new/lib")
	}
}

task releaseJar(type: Copy) {  
    from( 'build/classes')  
    into( 'build/libs')  
    include('paas-agent-1.0.jar')  
}  
  
task releaseLib(type: Copy, dependsOn: releaseJar) {  
    into "build/agent-client-new/lib"
    rename('paas-agent-1.0.jar','agent-client.jar')
    from 'build/libs'  
}

task jetty_releaseLib(type: Copy, dependsOn: releaseJar) {  
    into "build/jetty-server-new/lib"
    rename('paas-agent-1.0.jar','jetty_server.jar')
    from 'build/libs'  
}  


task jetty_webapp(type: Copy) {
	project.each { project ->
		from project.fileTree(
				dir: 'src/main/resources',
				include: {
					'jetty.properties'
					'**.xml'
				}
		)
		destinationDir file("$buildDir/jetty-server-new/jetty/webapps/agent-web-api/WEB-INF/classes")
	}
}

task jetty_webapp_classes(type: Copy) {
	from( 'build/classes/main')  
    into( 'build/jetty-server-new/jetty/webapps/agent-web-api/WEB-INF/classes') 
}

task jetty_webapp_lib(type: Copy) {
	project.each { project ->
		from project.configurations.runtime
		
		destinationDir file("$buildDir/jetty-server-new/jetty/webapps/agent-web-api/WEB-INF/lib")
	}
}
task jetty_webapp_webxml(type: Copy) {
	from( 'WebContent/WEB-INF')  
    into( 'build/jetty-server-new/jetty/webapps/agent-web-api/WEB-INF')
    include('web.xml') 
}
task jetty_webapp_metainf(type: Copy) {
	from( 'WebContent/META-INF')  
    into( 'build/jetty-server-new/jetty/webapps/agent-web-api/META-INF')
    include('MANIFEST.MF') 
}

task tar(type: Tar) { 
    from(project.file('build')) { 
	exclude '.setting' 
	exclude '.gradle' 
	exclude 'classes'
	exclude 'dependency-cache'
	exclude 'distributions'
	exclude 'resources'
	exclude 'libs'
	exclude 'tmp'
	exclude 'reports'
	exclude 'test-results'
	}
    
} 

jar {
    baseName projectName
    version moduleVersion
    exclude "context"
    exclude "mybatis"
    exclude "**.xml"
    exclude "**.properties"
    manifest {
        attributes 'packageName': projectName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
    }
}

build.dependsOn releaseJar,releaseLib,copy3rdJars,copyBin,copyConfig,jetty_releaseLib,jetty_copy3rdJars,jetty_copyBin,jetty_copyConfig,jetty_webapp,jetty_webapp_classes,jetty_webapp_lib,jetty_webapp_webxml,jetty_webapp_metainf,tar,cleanTempDir

